Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ranges = ranges;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _atom = require('atom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ranges(coverageFile) {
  let data;
  const ranges = [];
  try {
    data = _fs2.default.readFileSync(coverageFile, { encoding: 'utf8' });
  } catch (e) {
    return ranges;
  }

  // https://code.google.com/p/go/source/browse/cmd/cover/profile.go?repo=tools&name=a2a0f87c4b38&r=92b0a64343bc62160c1c10d335d375b0defa4c18#113
  const pattern = /^(.+):(\d+).(\d+),(\d+).(\d+) (\d+) (\d+)$/gim;

  const extract = match => {
    if (!match) {
      return;
    }
    const filePath = match[1];
    const count = match[7];
    const range = new _atom.Range([parseInt(match[2], 10) - 1, parseInt(match[3], 10) - 1], [parseInt(match[4], 10) - 1, parseInt(match[5], 10) - 1]);
    ranges.push({ range: range, count: parseInt(count, 10), file: filePath });
  };

  let match;
  while ((match = pattern.exec(data)) !== null) {
    extract(match);
  }

  return ranges;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvY292ZXItcGFyc2VyLmpzIl0sIm5hbWVzIjpbInJhbmdlcyIsImNvdmVyYWdlRmlsZSIsImRhdGEiLCJmcyIsInJlYWRGaWxlU3luYyIsImVuY29kaW5nIiwiZSIsInBhdHRlcm4iLCJleHRyYWN0IiwibWF0Y2giLCJmaWxlUGF0aCIsImNvdW50IiwicmFuZ2UiLCJSYW5nZSIsInBhcnNlSW50IiwicHVzaCIsImZpbGUiLCJleGVjIl0sIm1hcHBpbmdzIjoiOzs7UUFXZ0JBLE0sR0FBQUEsTTs7QUFUaEI7Ozs7QUFDQTs7OztBQVFPLFNBQVNBLE1BQVQsQ0FBZ0JDLFlBQWhCLEVBQTREO0FBQ2pFLE1BQUlDLElBQUo7QUFDQSxRQUFNRixTQUFTLEVBQWY7QUFDQSxNQUFJO0FBQ0ZFLFdBQU9DLGFBQUdDLFlBQUgsQ0FBZ0JILFlBQWhCLEVBQThCLEVBQUVJLFVBQVUsTUFBWixFQUE5QixDQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9DLENBQVAsRUFBVTtBQUNWLFdBQU9OLE1BQVA7QUFDRDs7QUFFRDtBQUNBLFFBQU1PLFVBQVUsK0NBQWhCOztBQUVBLFFBQU1DLFVBQVVDLFNBQVM7QUFDdkIsUUFBSSxDQUFDQSxLQUFMLEVBQVk7QUFDVjtBQUNEO0FBQ0QsVUFBTUMsV0FBV0QsTUFBTSxDQUFOLENBQWpCO0FBQ0EsVUFBTUUsUUFBUUYsTUFBTSxDQUFOLENBQWQ7QUFDQSxVQUFNRyxRQUFRLElBQUlDLFdBQUosQ0FDWixDQUFDQyxTQUFTTCxNQUFNLENBQU4sQ0FBVCxFQUFtQixFQUFuQixJQUF5QixDQUExQixFQUE2QkssU0FBU0wsTUFBTSxDQUFOLENBQVQsRUFBbUIsRUFBbkIsSUFBeUIsQ0FBdEQsQ0FEWSxFQUVaLENBQUNLLFNBQVNMLE1BQU0sQ0FBTixDQUFULEVBQW1CLEVBQW5CLElBQXlCLENBQTFCLEVBQTZCSyxTQUFTTCxNQUFNLENBQU4sQ0FBVCxFQUFtQixFQUFuQixJQUF5QixDQUF0RCxDQUZZLENBQWQ7QUFJQVQsV0FBT2UsSUFBUCxDQUFZLEVBQUVILE9BQU9BLEtBQVQsRUFBZ0JELE9BQU9HLFNBQVNILEtBQVQsRUFBZ0IsRUFBaEIsQ0FBdkIsRUFBNENLLE1BQU1OLFFBQWxELEVBQVo7QUFDRCxHQVhEOztBQWFBLE1BQUlELEtBQUo7QUFDQSxTQUFPLENBQUNBLFFBQVFGLFFBQVFVLElBQVIsQ0FBYWYsSUFBYixDQUFULE1BQWlDLElBQXhDLEVBQThDO0FBQzVDTSxZQUFRQyxLQUFSO0FBQ0Q7O0FBRUQsU0FBT1QsTUFBUDtBQUNEIiwiZmlsZSI6ImdvY292ZXItcGFyc2VyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL215dWdhLy5hdG9tL3BhY2thZ2VzL2dvLXBsdXMvbGliL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5pbXBvcnQgeyBSYW5nZSB9IGZyb20gJ2F0b20nXG5cbmV4cG9ydCB0eXBlIENvdmVyYWdlUmFuZ2UgPSB7XG4gIHJhbmdlOiBSYW5nZSxcbiAgY291bnQ6IG51bWJlcixcbiAgZmlsZTogc3RyaW5nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByYW5nZXMoY292ZXJhZ2VGaWxlOiBzdHJpbmcpOiBBcnJheTxDb3ZlcmFnZVJhbmdlPiB7XG4gIGxldCBkYXRhXG4gIGNvbnN0IHJhbmdlcyA9IFtdXG4gIHRyeSB7XG4gICAgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhjb3ZlcmFnZUZpbGUsIHsgZW5jb2Rpbmc6ICd1dGY4JyB9KVxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHJhbmdlc1xuICB9XG5cbiAgLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9nby9zb3VyY2UvYnJvd3NlL2NtZC9jb3Zlci9wcm9maWxlLmdvP3JlcG89dG9vbHMmbmFtZT1hMmEwZjg3YzRiMzgmcj05MmIwYTY0MzQzYmM2MjE2MGMxYzEwZDMzNWQzNzViMGRlZmE0YzE4IzExM1xuICBjb25zdCBwYXR0ZXJuID0gL14oLispOihcXGQrKS4oXFxkKyksKFxcZCspLihcXGQrKSAoXFxkKykgKFxcZCspJC9naW1cblxuICBjb25zdCBleHRyYWN0ID0gbWF0Y2ggPT4ge1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBjb25zdCBmaWxlUGF0aCA9IG1hdGNoWzFdXG4gICAgY29uc3QgY291bnQgPSBtYXRjaFs3XVxuICAgIGNvbnN0IHJhbmdlID0gbmV3IFJhbmdlKFxuICAgICAgW3BhcnNlSW50KG1hdGNoWzJdLCAxMCkgLSAxLCBwYXJzZUludChtYXRjaFszXSwgMTApIC0gMV0sXG4gICAgICBbcGFyc2VJbnQobWF0Y2hbNF0sIDEwKSAtIDEsIHBhcnNlSW50KG1hdGNoWzVdLCAxMCkgLSAxXVxuICAgIClcbiAgICByYW5nZXMucHVzaCh7IHJhbmdlOiByYW5nZSwgY291bnQ6IHBhcnNlSW50KGNvdW50LCAxMCksIGZpbGU6IGZpbGVQYXRoIH0pXG4gIH1cblxuICBsZXQgbWF0Y2hcbiAgd2hpbGUgKChtYXRjaCA9IHBhdHRlcm4uZXhlYyhkYXRhKSkgIT09IG51bGwpIHtcbiAgICBleHRyYWN0KG1hdGNoKVxuICB9XG5cbiAgcmV0dXJuIHJhbmdlc1xufVxuIl19