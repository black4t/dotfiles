Object.defineProperty(exports, "__esModule", {
  value: true
});
class OutputManager {

  constructor() {
    this.key = 'output';
    this.tab = {
      key: 'output',
      name: 'Output',
      packageName: 'go-plus',
      icon: 'check',
      order: 200
    };
    this.output = '';
  }

  update(props) {
    const oldProps = this.props;
    this.props = Object.assign({}, oldProps, props);

    const { exitcode = 0 } = this.props;
    if (exitcode !== 0 && this.requestFocus) {
      if (atom.config.get('go-plus.panel.focusOnFailure') && this.requestFocus) {
        this.requestFocus();
      }
    }

    if (this.view) {
      this.view.update();
    }
  }
}

exports.OutputManager = OutputManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm91dHB1dC1tYW5hZ2VyLmpzIl0sIm5hbWVzIjpbIk91dHB1dE1hbmFnZXIiLCJjb25zdHJ1Y3RvciIsImtleSIsInRhYiIsIm5hbWUiLCJwYWNrYWdlTmFtZSIsImljb24iLCJvcmRlciIsIm91dHB1dCIsInVwZGF0ZSIsInByb3BzIiwib2xkUHJvcHMiLCJPYmplY3QiLCJhc3NpZ24iLCJleGl0Y29kZSIsInJlcXVlc3RGb2N1cyIsImF0b20iLCJjb25maWciLCJnZXQiLCJ2aWV3Il0sIm1hcHBpbmdzIjoiOzs7QUFLQSxNQUFNQSxhQUFOLENBQTBDOztBQVF4Q0MsZ0JBQWM7QUFDWixTQUFLQyxHQUFMLEdBQVcsUUFBWDtBQUNBLFNBQUtDLEdBQUwsR0FBVztBQUNURCxXQUFLLFFBREk7QUFFVEUsWUFBTSxRQUZHO0FBR1RDLG1CQUFhLFNBSEo7QUFJVEMsWUFBTSxPQUpHO0FBS1RDLGFBQU87QUFMRSxLQUFYO0FBT0EsU0FBS0MsTUFBTCxHQUFjLEVBQWQ7QUFDRDs7QUFFREMsU0FBT0MsS0FBUCxFQUFzQjtBQUNwQixVQUFNQyxXQUFXLEtBQUtELEtBQXRCO0FBQ0EsU0FBS0EsS0FBTCxHQUFhRSxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkYsUUFBbEIsRUFBNEJELEtBQTVCLENBQWI7O0FBRUEsVUFBTSxFQUFFSSxXQUFXLENBQWIsS0FBbUIsS0FBS0osS0FBOUI7QUFDQSxRQUFJSSxhQUFhLENBQWIsSUFBa0IsS0FBS0MsWUFBM0IsRUFBeUM7QUFDdkMsVUFDRUMsS0FBS0MsTUFBTCxDQUFZQyxHQUFaLENBQWdCLDhCQUFoQixLQUNBLEtBQUtILFlBRlAsRUFHRTtBQUNBLGFBQUtBLFlBQUw7QUFDRDtBQUNGOztBQUVELFFBQUksS0FBS0ksSUFBVCxFQUFlO0FBQ2IsV0FBS0EsSUFBTCxDQUFVVixNQUFWO0FBQ0Q7QUFDRjtBQXJDdUM7O1FBd0NqQ1QsYSxHQUFBQSxhIiwiZmlsZSI6Im91dHB1dC1tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL215dWdhLy5hdG9tL3BhY2thZ2VzL2dvLXBsdXMvbGliIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHR5cGUgeyBQYW5lbE1vZGVsLCBUYWIgfSBmcm9tICcuL3BhbmVsL3RhYidcbmltcG9ydCB0eXBlIHsgT3V0cHV0UGFuZWwgfSBmcm9tICcuL291dHB1dC1wYW5lbCdcblxuY2xhc3MgT3V0cHV0TWFuYWdlciBpbXBsZW1lbnRzIFBhbmVsTW9kZWwge1xuICBrZXk6IHN0cmluZ1xuICB0YWI6IFRhYlxuICBvdXRwdXQ6IHN0cmluZ1xuICBwcm9wczogT2JqZWN0XG4gIHZpZXc6IE91dHB1dFBhbmVsXG4gIHJlcXVlc3RGb2N1czogPygpID0+IFByb21pc2U8dm9pZD5cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmtleSA9ICdvdXRwdXQnXG4gICAgdGhpcy50YWIgPSB7XG4gICAgICBrZXk6ICdvdXRwdXQnLFxuICAgICAgbmFtZTogJ091dHB1dCcsXG4gICAgICBwYWNrYWdlTmFtZTogJ2dvLXBsdXMnLFxuICAgICAgaWNvbjogJ2NoZWNrJyxcbiAgICAgIG9yZGVyOiAyMDBcbiAgICB9XG4gICAgdGhpcy5vdXRwdXQgPSAnJ1xuICB9XG5cbiAgdXBkYXRlKHByb3BzOiBPYmplY3QpIHtcbiAgICBjb25zdCBvbGRQcm9wcyA9IHRoaXMucHJvcHNcbiAgICB0aGlzLnByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgb2xkUHJvcHMsIHByb3BzKVxuXG4gICAgY29uc3QgeyBleGl0Y29kZSA9IDAgfSA9IHRoaXMucHJvcHNcbiAgICBpZiAoZXhpdGNvZGUgIT09IDAgJiYgdGhpcy5yZXF1ZXN0Rm9jdXMpIHtcbiAgICAgIGlmIChcbiAgICAgICAgYXRvbS5jb25maWcuZ2V0KCdnby1wbHVzLnBhbmVsLmZvY3VzT25GYWlsdXJlJykgJiZcbiAgICAgICAgdGhpcy5yZXF1ZXN0Rm9jdXNcbiAgICAgICkge1xuICAgICAgICB0aGlzLnJlcXVlc3RGb2N1cygpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudmlldykge1xuICAgICAgdGhpcy52aWV3LnVwZGF0ZSgpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IE91dHB1dE1hbmFnZXIgfVxuIl19