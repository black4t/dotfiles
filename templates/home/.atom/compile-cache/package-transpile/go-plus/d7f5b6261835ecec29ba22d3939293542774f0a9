Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getgopath = exports.getenvironment = undefined;

var _pathhelper = require('./pathhelper');

var pathhelper = _interopRequireWildcard(_pathhelper);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const getenvironment = () => {
  const e = Object.assign({}, process.env);
  const g = getgopath();
  if (g) {
    e.GOPATH = g;
  }
  e.GINKGO_EDITOR_INTEGRATION = 'true';
  return e;
};

const getgopath = () => {
  // Preferred: The Environment
  let g = process.env.GOPATH;
  if (g && g.trim() !== '') {
    return pathhelper.expand(process.env, g);
  }

  // Fallback: Atom Config
  g = atom.config.get('go-plus.config.gopath');
  if (g && g.trim() !== '') {
    return pathhelper.expand(process.env, g);
  }

  // Default gopath in go 1.8+
  return _path2.default.join(pathhelper.home(), 'go');
};

exports.getenvironment = getenvironment;
exports.getgopath = getgopath;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudmlyb25tZW50LmpzIl0sIm5hbWVzIjpbInBhdGhoZWxwZXIiLCJnZXRlbnZpcm9ubWVudCIsImUiLCJPYmplY3QiLCJhc3NpZ24iLCJwcm9jZXNzIiwiZW52IiwiZyIsImdldGdvcGF0aCIsIkdPUEFUSCIsIkdJTktHT19FRElUT1JfSU5URUdSQVRJT04iLCJ0cmltIiwiZXhwYW5kIiwiYXRvbSIsImNvbmZpZyIsImdldCIsInBhdGgiLCJqb2luIiwiaG9tZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQTs7SUFBWUEsVTs7QUFDWjs7Ozs7Ozs7QUFFQSxNQUFNQyxpQkFBaUIsTUFBNkI7QUFDbEQsUUFBTUMsSUFBSUMsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JDLFFBQVFDLEdBQTFCLENBQVY7QUFDQSxRQUFNQyxJQUFJQyxXQUFWO0FBQ0EsTUFBSUQsQ0FBSixFQUFPO0FBQ0xMLE1BQUVPLE1BQUYsR0FBV0YsQ0FBWDtBQUNEO0FBQ0RMLElBQUVRLHlCQUFGLEdBQThCLE1BQTlCO0FBQ0EsU0FBT1IsQ0FBUDtBQUNELENBUkQ7O0FBVUEsTUFBTU0sWUFBWSxNQUFjO0FBQzlCO0FBQ0EsTUFBSUQsSUFBSUYsUUFBUUMsR0FBUixDQUFZRyxNQUFwQjtBQUNBLE1BQUlGLEtBQUtBLEVBQUVJLElBQUYsT0FBYSxFQUF0QixFQUEwQjtBQUN4QixXQUFPWCxXQUFXWSxNQUFYLENBQWtCUCxRQUFRQyxHQUExQixFQUErQkMsQ0FBL0IsQ0FBUDtBQUNEOztBQUVEO0FBQ0FBLE1BQUtNLEtBQUtDLE1BQUwsQ0FBWUMsR0FBWixDQUFnQix1QkFBaEIsQ0FBTDtBQUNBLE1BQUlSLEtBQUtBLEVBQUVJLElBQUYsT0FBYSxFQUF0QixFQUEwQjtBQUN4QixXQUFPWCxXQUFXWSxNQUFYLENBQWtCUCxRQUFRQyxHQUExQixFQUErQkMsQ0FBL0IsQ0FBUDtBQUNEOztBQUVEO0FBQ0EsU0FBT1MsZUFBS0MsSUFBTCxDQUFVakIsV0FBV2tCLElBQVgsRUFBVixFQUE2QixJQUE3QixDQUFQO0FBQ0QsQ0FmRDs7UUFpQlNqQixjLEdBQUFBLGM7UUFBZ0JPLFMsR0FBQUEsUyIsImZpbGUiOiJlbnZpcm9ubWVudC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9teXVnYS8uYXRvbS9wYWNrYWdlcy9nby1wbHVzL2xpYi9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5pbXBvcnQgKiBhcyBwYXRoaGVscGVyIGZyb20gJy4vcGF0aGhlbHBlcidcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbmNvbnN0IGdldGVudmlyb25tZW50ID0gKCk6IHsgW3N0cmluZ106ID9zdHJpbmcgfSA9PiB7XG4gIGNvbnN0IGUgPSBPYmplY3QuYXNzaWduKHt9LCBwcm9jZXNzLmVudilcbiAgY29uc3QgZyA9IGdldGdvcGF0aCgpXG4gIGlmIChnKSB7XG4gICAgZS5HT1BBVEggPSBnXG4gIH1cbiAgZS5HSU5LR09fRURJVE9SX0lOVEVHUkFUSU9OID0gJ3RydWUnXG4gIHJldHVybiBlXG59XG5cbmNvbnN0IGdldGdvcGF0aCA9ICgpOiBzdHJpbmcgPT4ge1xuICAvLyBQcmVmZXJyZWQ6IFRoZSBFbnZpcm9ubWVudFxuICBsZXQgZyA9IHByb2Nlc3MuZW52LkdPUEFUSFxuICBpZiAoZyAmJiBnLnRyaW0oKSAhPT0gJycpIHtcbiAgICByZXR1cm4gcGF0aGhlbHBlci5leHBhbmQocHJvY2Vzcy5lbnYsIGcpXG4gIH1cblxuICAvLyBGYWxsYmFjazogQXRvbSBDb25maWdcbiAgZyA9IChhdG9tLmNvbmZpZy5nZXQoJ2dvLXBsdXMuY29uZmlnLmdvcGF0aCcpOiBhbnkpXG4gIGlmIChnICYmIGcudHJpbSgpICE9PSAnJykge1xuICAgIHJldHVybiBwYXRoaGVscGVyLmV4cGFuZChwcm9jZXNzLmVudiwgZylcbiAgfVxuXG4gIC8vIERlZmF1bHQgZ29wYXRoIGluIGdvIDEuOCtcbiAgcmV0dXJuIHBhdGguam9pbihwYXRoaGVscGVyLmhvbWUoKSwgJ2dvJylcbn1cblxuZXhwb3J0IHsgZ2V0ZW52aXJvbm1lbnQsIGdldGdvcGF0aCB9XG4iXX0=